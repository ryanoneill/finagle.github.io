<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Finagle blog</title>
  <id>https://finagle.github.io/blog</id>
  <link href="https://finagle.github.io/blog"/>
  <link href="https://finagle.github.io/blog/blog/feed.xml" rel="self"/>
  <updated>2019-04-19T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>April 2019 Release Notes - Version 19.4.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2019/04/19/release-notes/"/>
    <id>https://finagle.github.io/blog/2019/04/19/release-notes/</id>
    <published>2019-04-19T00:00:00Z</published>
    <updated>2019-04-19T14:53:13-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h3&gt;Highlights&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;After several years of continuous effort decoupling Finagle from Netty 3, we&amp;rsquo;ve finally got to the
point the dependency can be dropped. As of this release, there is no Netty 3 artifacts on the
classpath.&lt;/li&gt;
&lt;li&gt;Finagle HTTP now transmits trailing headers (trailers).&lt;/li&gt;
&lt;li&gt;Finagle HTTP has become more strict with headers validation and is now in compliance with
RFC7230.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-core: Make &lt;code&gt;maxDepth&lt;/code&gt; in &lt;code&gt;Namer&lt;/code&gt; configurable. &lt;a href="https://github.com/twitter/finagle/commit/03cc319706182eb86ad1f4eb54041894a2599528"&gt;03cc3197&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;  namerMaxDepth in Namer now configurable through a global flag (&lt;code&gt;namerMaxDepth&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  finagle-core: The newly renamed &lt;code&gt;SslSessionInfo&lt;/code&gt; is now public. It is
intended for providing information about a connection&amp;rsquo;s SSL/TLS session.
&lt;a href="https://github.com/twitter/finagle/commit/811fe004a835620c834f2cac87dc69fa8b347d35"&gt;811fe004&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-core: Added the &lt;code&gt;c.t.finagle.DtabFlags&lt;/code&gt; trait which defines a Flag and function for
appending to the &amp;ldquo;base&amp;rdquo; &lt;code&gt;c.t.finagle.Dtab&lt;/code&gt; delegation table. &lt;a href="https://github.com/twitter/finagle/commit/675630dfaace1a0f06104c4ac8719a581fa44851"&gt;675630df&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-http: Finagle HTTP implementation now supports trailing headers (trailers). Use
&lt;code&gt;c.t.f.http.Message.trailers&lt;/code&gt; to access trailing headers on a fully-buffered message
(isChunked == false) or &lt;code&gt;c.t.f.http.Message.chunkReader&lt;/code&gt; on a message with chunked payload
(isChunked == true). &lt;a href="https://github.com/twitter/finagle/commit/351c43c15861f644b77ca3c5e627a0225001c615"&gt;351c43c1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-http,thriftmux: Added tracing annotations to backup requests. &lt;a href="https://github.com/twitter/finagle/commit/48f54e82c2df35a5546a55c889286e99622b8b44"&gt;48f54e82&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;  Binary annotation &lt;code&gt;srv/backup\_request\_processing&lt;/code&gt;, when servers are processing backup requests.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  finagle-http: Added new server metrics to keep track of inbound requests that are rejected due to
their headers containing invalid characters (as seen by RFC-7230): &lt;code&gt;rejected_invalid_header_names&lt;/code&gt;
and &lt;code&gt;rejected_invalid_header_values&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/41bd061a4b8afbd170c6bc108eb7de2b77a298d2"&gt;41bd061a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-http: Added stats of the duration in milliseconds of request/response streams:
&lt;code&gt;request_stream_duration_ms&lt;/code&gt; and &lt;code&gt;response_stream_duration_ms&lt;/code&gt;. They are enabled by using
&lt;code&gt;.withHttpStats&lt;/code&gt; on &lt;code&gt;Http.Client&lt;/code&gt; and &lt;code&gt;Http.Server&lt;/code&gt; &lt;a href="https://github.com/twitter/finagle/commit/916f4a2683aef99bc5e0c29bbdad0523cebb7bc1"&gt;916f4a26&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-mysql: A new toggle, &lt;code&gt;com.twitter.finagle.mysql.IncludeHandshakeInServiceAcquisition&lt;/code&gt;, has
been added. Turning on this toggle will move MySQL session establishment (connection phase) to be
part of service acqusition. &lt;a href="https://github.com/twitter/finagle/commit/fe4d8919922115cf5aa4d4c03305b04c89abb362"&gt;fe4d8919&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-core: Client-side nacking admission control now defaults on. See the documentation
on &lt;code&gt;c.t.f.filter.NackAdmissionFilter&lt;/code&gt; for details. This can be disabled by setting the
global flag, &lt;code&gt;com.twitter.finagle.client.useNackAdmissionFilter&lt;/code&gt;, to &lt;code&gt;false&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/aa36f56b7e47eb2af8fadca83f204fa57a38603e"&gt;aa36f56b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-core: &lt;code&gt;LatencyCompensation&lt;/code&gt; now applies to service acquisition. &lt;a href="https://github.com/twitter/finagle/commit/1ec020a5b80b35f1d0158aac181b14d7942aaa66"&gt;1ec020a5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-http: HTTP headers validation on the outbound path is now in compliance with RFC7230.
&lt;a href="https://github.com/twitter/finagle/commit/5b2e9f9540b865983e060b65cb7dae83cbf93a22"&gt;5b2e9f95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finagle-netty4: Netty&amp;rsquo;s reference leak tracking now defaults to disabled.
Set the flag &lt;code&gt;com.twitter.finagle.netty4.trackReferenceLeaks&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to enable.
&lt;a href="https://github.com/twitter/finagle/commit/f63d7f7a28157318f98ec8ca44821856aa7f550f"&gt;f63d7f7a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle: Dropped a dependency on Netty 3 &lt;a href="https://github.com/twitter/finagle/commit/03c773a506aa838c562e37a3e586fb862cfa1a6a"&gt;03c773a5&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-netty3 sub-project has been removed&lt;/li&gt;
&lt;li&gt;  finagle-http-cookie sub-project has been removed&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;c.t.f.http.Cookie&lt;/code&gt; no longer takes Netty&amp;rsquo;s &lt;code&gt;DefaultCookie&lt;/code&gt; in the constructor&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The &lt;code&gt;peerCertificate&lt;/code&gt; methods of &lt;code&gt;c.t.f.t.TransportContext&lt;/code&gt; and &lt;code&gt;c.t.f.p.PushChannelHandle&lt;/code&gt;
have been replaced with the more robust &lt;code&gt;sslSessionInfo&lt;/code&gt;. Users looking for just the functional
equivalence of peerCertificate can use &lt;code&gt;sslSessionInfo.peerCertificates.headOption&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/dc4bfbcf226adc7b1a5f52366148f8ac36690a71"&gt;dc4bfbcf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The &lt;code&gt;com.twitter.finagle.core.UseClientNackAdmissionFilter&lt;/code&gt; toggle has been replaced
by a global flag, &lt;code&gt;com.twitter.finagle.client.useNackAdmissionFilter&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/aa36f56b7e47eb2af8fadca83f204fa57a38603e"&gt;aa36f56b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Allow users to specify &lt;code&gt;stringLengthLimit&lt;/code&gt; and &lt;code&gt;containerLengthLimit&lt;/code&gt;
&lt;a href="https://github.com/twitter/finagle/commit/233150a9f20dca50ed75c41b80f351674c17a862"&gt;233150a9&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  method parameter readLength in &lt;code&gt;com.twitter.finagle.thrift.Protocols#binaryFactory&lt;/code&gt; renamed to
&lt;code&gt;stringLengthLimit&lt;/code&gt; to reflect usage&lt;/li&gt;
&lt;li&gt;  method parameter &lt;code&gt;containerLengthLimit&lt;/code&gt; added to &lt;code&gt;com.twitter.finagle.thrift.Protocols#binaryFactory&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Added&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  inject-server: Add &lt;code&gt;globalFlags&lt;/code&gt; argument to &lt;code&gt;EmbeddedTwitterServer&lt;/code&gt;, which will allow for scoping
a &lt;code&gt;c.t.a.GlobalFlag&lt;/code&gt; property change to the lifecycle of the underlying TwitterServer, as a
&lt;code&gt;c.t.a.GlobalFlag&lt;/code&gt; is normally scoped to the JVM/process. This change is also reflected in
&lt;code&gt;EmbeddedHttpServer&lt;/code&gt; and &lt;code&gt;EmbeddedThriftServer&lt;/code&gt; constructors. &lt;a href="https://github.com/twitter/finatra/commit/38a3180a5d61d12fb1546dd572f075cfd2fb3dbf"&gt;38a3180a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  inject-utils: add &lt;code&gt;toOrderedMap&lt;/code&gt; implicit conversion for &lt;code&gt;java.util.Map&lt;/code&gt; &lt;a href="https://github.com/twitter/finatra/commit/1686420c58506eddf3ef2fb4e75d8007bc27ee2e"&gt;1686420c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-kafka-streams: Add flag &lt;code&gt;rocksdb.manifest.preallocation.size&lt;/code&gt; with default value &lt;code&gt;4.megabytes&lt;/code&gt;
to &lt;code&gt;c.t.f.k.c.RocksDbFlags&lt;/code&gt; and set value in &lt;code&gt;c.t.f.k.c.FinatraRocksDBConfig&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/0cac9785bc90c421e49a7c0db08066cd0d7a61b9"&gt;0cac9785&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-http: Add &lt;code&gt;commaSeparatedList&lt;/code&gt; boolean parameter to &lt;code&gt;QueryParams&lt;/code&gt;, for parsing comma-separated
query parameters into collection types. &lt;a href="https://github.com/twitter/finatra/commit/0ae425a2f50d0f764f39c80fddd8e11ee0f4bf8e"&gt;0ae425a2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finatra-kafka: Upgraded kafka libraries from 2.0.0 to 2.2.0 &lt;a href="https://github.com/twitter/finatra/commit/9d22ee7ea99f9db605882b90b0b6052e841e60ec"&gt;9d22ee7e&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://archive.apache.org/dist/kafka/2.0.1/RELEASE_NOTES.html"&gt;Kafka 2.0.1 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://archive.apache.org/dist/kafka/2.1.0/RELEASE_NOTES.html"&gt;Kafka 2.1.0 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://archive.apache.org/dist/kafka/2.1.1/RELEASE_NOTES.html"&gt;Kafka 2.1.1 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://archive.apache.org/dist/kafka/2.2.0/RELEASE_NOTES.html"&gt;Kafka 2.2.0 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  finatra-thrift: Removed &lt;code&gt;c.t.finatra.thrift.exceptions.FinatraThriftExceptionMapper&lt;/code&gt;,
&lt;code&gt;c.t.finatra.thrift.filters.ClientIdAcceptlistFilter&lt;/code&gt;,
&lt;code&gt;c.t.finatra.thrift.modules.ClientIdAcceptlistModule&lt;/code&gt;,
&lt;code&gt;c.t.finatra.thrift.filters.ClientIdWhitelistFilter&lt;/code&gt;,
&lt;code&gt;c.t.finatra.thrift.modules.ClientIdWhitelistModule&lt;/code&gt;,
and the finatra/finatra_thrift_exceptions.thrift IDL. &lt;a href="https://github.com/twitter/finatra/commit/caed5ec8c0aa38381853d8efb3a6717b78670dbc"&gt;caed5ec8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-thrift: Constructing a ThriftRouter now requires serverName. &lt;a href="https://github.com/twitter/finatra/commit/dc357fd8361f75e4831f464835581ce9ab38cdee"&gt;dc357fd8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-examples: Updated &lt;code&gt;StreamingController&lt;/code&gt; to use &lt;code&gt;Reader&lt;/code&gt; instead of &lt;code&gt;AsyncStream&lt;/code&gt;
&lt;a href="https://github.com/twitter/finatra/commit/3d5e3282cd860a1b4fa5b1c4a608098f97ca300a"&gt;3d5e3282&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-kafka-streams: Implement &lt;code&gt;FinatraKeyValueStore&lt;/code&gt; as custom store. &lt;a href="https://github.com/twitter/finatra/commit/cd38ddf699872c48e4bbce2cfbda14c1a98d5864"&gt;cd38ddf6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-thrift: Constructing a &lt;code&gt;ThriftRouter&lt;/code&gt; now requires &lt;code&gt;c.t.f.StackTransformer&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/a96312d2fb3ee53ba56b2eda914245ef05c89c02"&gt;a96312d2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finatra-kafka: Ensure that &lt;code&gt;EmbeddedKafka&lt;/code&gt; implementation of &lt;code&gt;beforeAll()&lt;/code&gt; makes
call to &lt;code&gt;super.beforeAll()&lt;/code&gt; so hooks registered in super class get executed. &lt;a href="https://github.com/twitter/finatra/commit/9404b28f4477387872140a6d153196887213bb70"&gt;9404b28f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-kafka-streams: &lt;code&gt;FinatraTransformer.timerStore&lt;/code&gt; config object references immutable
map which causes exception thrown if user code calls &lt;code&gt;AbstractStoreBuilder.withLoggingDisabled&lt;/code&gt;.
Fixed &lt;code&gt;FinatraTransformer.timerStore&lt;/code&gt; to convert from immutable map to mutable map before
forwarding config object to kafka library. &lt;a href="https://github.com/twitter/finatra/commit/827c46126dddc271e8b29b80f6275da3d852cb4d"&gt;827c4612&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Remove deprecated uses of &lt;code&gt;c.t.server.ShadowAdminServer&lt;/code&gt;. &lt;a href="https://github.com/twitter/twitter-server/commit/e94e83006d24b26c63f279fa72ab22a95d406f4a"&gt;e94e8300&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Mix in the &lt;code&gt;c.t.finagle.DtabFlags&lt;/code&gt; to allow servers to append to the &amp;ldquo;base&amp;rdquo; &lt;code&gt;c.t.finagle.Dtab&lt;/code&gt;
delegation table. Users can now call &lt;code&gt;c.t.finagle.DtabFlags\#addDtabs()&lt;/code&gt; when they want to append
the parsed &lt;code&gt;Flag&lt;/code&gt; value to the &lt;code&gt;Dtab.base&lt;/code&gt; delegation table. Users should note to only call this
method &lt;em&gt;after&lt;/em&gt; Flag parsing has occurred (which is after &lt;strong&gt;init&lt;/strong&gt; and before &lt;strong&gt;premain&lt;/strong&gt;).
We also update the &lt;code&gt;c.t.server.handler.DtabHandler&lt;/code&gt; to always return a proper JSON response of
the currently configured &lt;code&gt;c.t.finagle.Dtab.base&lt;/code&gt;. &lt;a href="https://github.com/twitter/twitter-server/commit/a00e3942d95fd0a0e29e14b47fa0997c8e6b3799"&gt;a00e3942&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  util-app: Improve usage of &lt;code&gt;Flag.let&lt;/code&gt; by providing a &lt;code&gt;Flag.letParse&lt;/code&gt; method
&lt;a href="https://github.com/twitter/util/commit/0d9dded32b931d6fff7335b5f4c573c474b5b65a"&gt;0d9dded3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>March 2019 Release Notes - Version 19.3.0 🦁</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2019/03/14/release-notes/"/>
    <id>https://finagle.github.io/blog/2019/03/14/release-notes/</id>
    <published>2019-03-14T00:00:00Z</published>
    <updated>2019-04-19T09:54:14-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Spring has almost sprung, so take a look at all that we have done!&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-core: Added tracing annotations to backup requests. &lt;a href="https://github.com/twitter/finagle/commit/5201f6237ce5185c4208d5945b33813b47507570"&gt;5201f623&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;  Timestamped annotation &amp;ldquo;Client Backup Request Issued&amp;rdquo;&lt;/li&gt;
&lt;li&gt;  Timestamped annotation &amp;ldquo;Client Backup Request Won&amp;rdquo; or &amp;ldquo;Client Backup Request Lost&amp;rdquo;&lt;/li&gt;
&lt;li&gt;  Binary annotation &amp;ldquo;clnt/backup_request_threshold_ms&amp;rdquo;, with the current value of the latency threshold, in milliseconds&lt;/li&gt;
&lt;li&gt;  Binary annotation &amp;ldquo;clnt/backup_request_span_id&amp;rdquo;, with the span id of the backup request&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-core: Deprecated multi-param legacy tls methods have been removed in
c.t.f.param.ServerTransportParams and c.t.f.builder.ServerBuilder. Users should migrate
to using the tls(SslServerConfiguration) method instead. &lt;a href="https://github.com/twitter/finagle/commit/ca646bd850fae230f6d35a6aeb67be00679ccd97"&gt;ca646bd8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-core: The tracing annotations from MkJvmFilter have been enhanced. &lt;a href="https://github.com/twitter/finagle/commit/0586f657cdba87bbfddbb3f171d646139ec20fdf"&gt;0586f657&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Timestamped annotations &amp;ldquo;GC Start&amp;rdquo; and &amp;ldquo;GC End&amp;rdquo; for each garbage collection
event that occurred during the request.&lt;/li&gt;
&lt;li&gt;  Binary annotation &amp;ldquo;jvm/gc_count&amp;rdquo;, with the total number of garbage collection
events that occurred during the request.&lt;/li&gt;
&lt;li&gt;  Binary annotation &amp;ldquo;jvm/gc_ms&amp;rdquo;, with the total milliseconds of garbage collection
events that occurred during the request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Added&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finatra-kafka: FinagleKafka clients pass correct deadline for close to
underlying Kafka clients. &lt;a href="https://github.com/twitter/finatra/commit/6e579e60df4ec515e5157055d884f104f15c9bbd"&gt;6e579e60&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-kafka-streams: (BREAKING API CHANGE) Create flags for common consumer and producer
configs. KafkaFlagUtils#kafkaDocumentation and getKafkaDefault are no longer public methods.
&lt;a href="https://github.com/twitter/finatra/commit/9ca7eac5173450862af8ec08a292a70db942769c"&gt;9ca7eac5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-kafka: Added support to fetch end offset for a given partition. &lt;a href="https://github.com/twitter/finatra/commit/2053b76a6d4f02ce152469d21b4dcbb098e73f59"&gt;2053b76a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-http: Added HttpServerTrait which allows for a simple way to serve a
Finagle Service[Request, Response] on an external interface without the need to
configure the Finatra HttpRouter. &lt;a href="https://github.com/twitter/finatra/commit/a4fe06c5c9a6a0424f01a10c043ad705d5e1cba2"&gt;a4fe06c5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-http: Added support to serve c.t.io.Reader as a streaming request.
&lt;a href="https://github.com/twitter/finatra/commit/4491e5e52d8035ab7a4147f482201924cd12795d"&gt;4491e5e5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finatra-kafka-streams: finatra-kafka-streams: Refactor queryable state management &lt;a href="https://github.com/twitter/finatra/commit/ce05c72fc507051f17f9160212fb768bad365f02"&gt;ce05c72f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-kafka-streams: Improve querying of windowed stores. &lt;a href="https://github.com/twitter/finatra/commit/ea65ef40230f7c024e9ab17baa400b54c2081b78"&gt;ea65ef40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  inject-utils: Mark c.t.inject.utils.StringUtils#snakify,camelify,pascalify as
deprecated as their implementations have moved to util/util-core c.t.conversions.StringOps.
Encourage users to switch usages to c.t.conversions.StringOps#toSnakeCase,toCamelCase,toPascalCase.
&lt;a href="https://github.com/twitter/finatra/commit/85b9361c761b34b07fa6c1c3af40930d552f2f9a"&gt;85b9361c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  finatra-thrift: Changed c.t.finatra.thrift.ThriftServerTrait#service to #thriftService to
not collide with the serving of a Finagle service from the HttpServer when a server extends
both HttpServer and ThriftServer. &lt;a href="https://github.com/twitter/finatra/commit/a4fe06c5c9a6a0424f01a10c043ad705d5e1cba2"&gt;a4fe06c5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;h4&gt;Closed&lt;/h4&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Change the /admin/histograms?h=&amp;hellip;-style endpoints to return data in the same style as
/admin/histograms.json. This should make it easier to use tools to parse data from either
endpoint. &lt;a href="https://github.com/twitter/twitter-server/commit/92e4dad51acd0af3ad6bf656e43504716b925eaf"&gt;92e4dad5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  util-core: Discard parent reader from Reader.flatten when child reader encounters an exception.
&lt;a href="https://github.com/twitter/util/commit/0cc640ac8ff79218fd1d0fe165bbdb647f33a9f6"&gt;0cc640ac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  util-core: Added c.t.conversions.StringOps#toSnakeCase,toCamelCase,toPascalCase implementations.
&lt;a href="https://github.com/twitter/util/commit/b0a5d06269b9526b4408239ce1441b2a213dd0df"&gt;b0a5d062&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>February 2019 Release Notes - Version 19.2.0 ☔️</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2019/02/20/release-notes/"/>
    <id>https://finagle.github.io/blog/2019/02/20/release-notes/</id>
    <published>2019-02-20T00:00:00Z</published>
    <updated>2019-04-19T09:54:14-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It is the rainy season in San Francisco, grab a cup of hot tea and take a look at our new February release!&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Added gauge &lt;code&gt;is_marked_dead&lt;/code&gt; as an indicator of whether the host is marked
as dead(1) or not(0) in &lt;code&gt;FailFastFactory&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/068a15e685dc5dda02ef098b1031378c04f1b9cc"&gt;068a15e6&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;KeyCredentials.CertsAndKey&lt;/code&gt; has been added as an option for
&lt;code&gt;c.t.f.ssl.KeyCredentials&lt;/code&gt; for when the certificate and certificate chain are
contained within the same file. &lt;a href="https://github.com/twitter/finagle/commit/b4a9e8cdbc79c27d6ff909f810e072115c7cbc4b"&gt;b4a9e8cd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thriftmux: Additional information is now annotated in traces for clients
using Scrooge generated Thrift bindings. &lt;a href="https://github.com/twitter/finagle/commit/c69a22f8a174e86aca2e72ddcdc98f3a5927157b"&gt;c69a22f8&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/32d9b56b905b13035bf5f92ad9639371e9e7e631"&gt;32d9b56b&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finagle/commit/6283c6ce95bf4dda1c826c41cd3a6a2b15f38327"&gt;6283c6ce&lt;/a&gt;.
This includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RPC method name&lt;/li&gt;
&lt;li&gt;Request serialization time, in nanoseconds&lt;/li&gt;
&lt;li&gt;Request deserialization time, in nanoseconds&lt;/li&gt;
&lt;li&gt;Response serialization time, in nanoseconds&lt;/li&gt;
&lt;li&gt;Response deserialization time, in nanoseconds&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Removed &lt;code&gt;Http.Client.withCompressionLevel&lt;/code&gt; because it wasn&amp;rsquo;t doing anything.
To migrate your client, simply remove the configuration&amp;ndash;it had absolutely no effect.
&lt;a href="https://github.com/twitter/finagle/commit/8794437119a6b7c492657e3e13ead7f0021d0494"&gt;87944371&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: &lt;code&gt;c.t.f.dispatch.ExpiringServerDispatcher&lt;/code&gt; was dead code. We removed it.
&lt;a href="https://github.com/twitter/finagle/commit/ae0571c9dbc88b1708f2dc338c2511318812c3c3"&gt;ae0571c9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Removed &lt;code&gt;newIface&lt;/code&gt; and &lt;code&gt;newServiceIface&lt;/code&gt; methods from
&lt;code&gt;c.t.f.thrift.ThriftRichClient.MultiplexedThriftClient&lt;/code&gt;, which are deprecated in November 2017.
&lt;a href="https://github.com/twitter/finagle/commit/773b6e57ab38c45c0dbecc4438fe0b3d9bcb2e12"&gt;773b6e57&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Removed deprecated APIs located in Thrift.scala:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;c.t.f.Thrift.Client.stats
=&amp;gt; use c.t.f.Thrift.Client.clientParam.clientStats&lt;/li&gt;
&lt;li&gt;c.t.f.Thrift.withProtocolFactory
=&amp;gt; use c.t.f.Thrift.client.withProtocolFactory&lt;/li&gt;
&lt;li&gt;c.t.f.Thrift.withClientId
=&amp;gt; usec.t.f.Thrift.client.withClientId&lt;/li&gt;
&lt;li&gt;c.t.f.Thrift.Server.serverLabel
=&amp;gt; use c.t.f.Thrift.Server.serverParam.serviceName&lt;/li&gt;
&lt;li&gt;c.t.f.Thrift.Server.serverStats
=&amp;gt; use c.t.f.Thrift.Server.serverParam.serverStats&lt;/li&gt;
&lt;li&gt;c.t.f.Thrift.Server.maxThriftBufferSize
=&amp;gt; use c.t.f.Thrift.Server.serverParam.maxThriftBufferSize
&lt;a href="https://github.com/twitter/finagle/commit/c6eb20207376a86f59ef34753da39a27390faf18"&gt;c6eb2020&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: &lt;code&gt;c.t.f.thrift.ThriftServiceIface.Filterable&lt;/code&gt; is removed, use
&lt;code&gt;c.t.f.thrift.service.Filterable&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/23affacc34d7559d89bbd7ce9d0fe9720f584e92"&gt;23affacc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: &lt;code&gt;c.t.f.thrift.ThriftServiceIface&lt;/code&gt; is removed, use
&lt;code&gt;c.t.f.thrift.service.ThriftServicePerEndpoint&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/23affacc34d7559d89bbd7ce9d0fe9720f584e92"&gt;23affacc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thriftmux: Removed deprecated APIs located in ThriftMux.scala:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;c.t.f.ThriftMux.Client.stats
=&amp;gt; use c.t.f.ThriftMux.Clien.clientParam.clientStats&lt;/li&gt;
&lt;li&gt;c.t.f.ThriftMux.Server.serverLabel
=&amp;gt; use c.t.f.ThriftMux.Server.serverParam.serviceName&lt;/li&gt;
&lt;li&gt;c.t.f.ThriftMux.Server.serverStats
=&amp;gt; use c.t.f.ThriftMux.Server.serverParam.serverStats&lt;/li&gt;
&lt;li&gt;c.t.f.ThriftMux.Server.maxThriftBufferSize
=&amp;gt; use c.t.f.ThriftMux.Server.serverParam.maxThriftBufferSize
&lt;a href="https://github.com/twitter/finagle/commit/c6eb20207376a86f59ef34753da39a27390faf18"&gt;c6eb2020&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thriftmux: &lt;code&gt;ThriftMux.Client.pushMuxer&lt;/code&gt; is removed. Use &lt;code&gt;ThriftMux.Client.standardMuxer&lt;/code&gt;
instead. &lt;a href="https://github.com/twitter/finagle/commit/90333b1acaae9ebf2d34358b183574598c3b1c83"&gt;90333b1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thriftmux: &lt;code&gt;ThriftMux.serverMuxer&lt;/code&gt; is removed. Use &lt;code&gt;ThriftMux.Server.defaultMuxer&lt;/code&gt;
instead. &lt;a href="https://github.com/twitter/finagle/commit/90333b1acaae9ebf2d34358b183574598c3b1c83"&gt;90333b1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: Removed the &lt;code&gt;c.t.f.http.Statuses&lt;/code&gt; java helper, which was deprecated two years
ago in favor of using &lt;code&gt;c.t.f.http.Status&lt;/code&gt; directly. &lt;a href="https://github.com/twitter/finagle/commit/75a4a2097540d3577f1a72611340c371974b8406"&gt;75a4a209&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: Removed the &lt;code&gt;c.t.f.http.Versions&lt;/code&gt; java helper, which was deprecated two years
ago in favor of using &lt;code&gt;c.t.f.http.Version&lt;/code&gt; directly. &lt;a href="https://github.com/twitter/finagle/commit/f191f1db1cbcb8d5dac7e9e295e7e09c21762a75"&gt;f191f1db&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: Removed the &lt;code&gt;c.t.f.http.Methods&lt;/code&gt; java helper, which was deprecated two years
ago in favor of using &lt;code&gt;c.t.f.http.Method&lt;/code&gt; directly. &lt;a href="https://github.com/twitter/finagle/commit/ccf10dbc54f33313860d4f1a229537a2d9677a07"&gt;ccf10dbc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: &lt;code&gt;c.t.f.http.Response.Ok&lt;/code&gt; was removed. Use just &lt;code&gt;Response()&lt;/code&gt; or &lt;code&gt;Response.Proxy&lt;/code&gt;
if you need to mock it. &lt;a href="https://github.com/twitter/finagle/commit/d93bb1c97c96312fb2354d552fc6d83f29e6e975"&gt;d93bb1c9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;Drv.Aliased&lt;/code&gt; and &lt;code&gt;Drv.newVose&lt;/code&gt; are now private, please
construct a &lt;code&gt;Drv&lt;/code&gt; instance using &lt;code&gt;Drv.apply&lt;/code&gt; or &lt;code&gt;Drv.fromWeights&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/9c810dd3b5f5111f2ad4abdab56a6b09a65cc05d"&gt;9c810dd3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;c.t.f.BackupRequestLost&lt;/code&gt; is now removed. Please use &lt;code&gt;c.t.f.Failure.ignorable&lt;/code&gt;
instead. &lt;a href="https://github.com/twitter/finagle/commit/02d3d524b64dd6ba9af4f4b5104c901abeb9b9f5"&gt;02d3d524&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Fix for a bug where HTTP/2 clients could retry requests that had a chunked
body even if the request body was consumed. &lt;a href="https://github.com/twitter/finagle/commit/b031e757a624ba082397a849e7fad26073b6e6f1"&gt;b031e757&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Fix for a bug where HTTP clients could assume connections are reusable, despite
having streaming requests in flight. &lt;a href="https://github.com/twitter/finagle/commit/88a2d0ba683124fb390d8e9367ccd5959bd5df27"&gt;88a2d0ba&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Faster &lt;code&gt;Filters&lt;/code&gt;. Removes unnecessary &lt;code&gt;Service.rescue&lt;/code&gt; proxies from
the intermediate &lt;code&gt;andThen&lt;/code&gt;-ed &lt;code&gt;Filters&lt;/code&gt;. Previously in rare cases you might have seen
a raw &lt;code&gt;Exception&lt;/code&gt; not wrapped in a &lt;code&gt;Future&lt;/code&gt; if the &lt;code&gt;Filter&lt;/code&gt; threw. These will now
consistently be lifted into a &lt;code&gt;Future.exception&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/a2ddc72761885782fbf7ee8dec335aeb190dc027"&gt;a2ddc727&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: MethodBuilder metrics filtering updated to now report rolled-up
logical failures. &lt;a href="https://github.com/twitter/finagle/commit/6e3bf33f83cfe211163233ce430d17b533b2fe14"&gt;6e3bf33f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Disabling Netty3 cookies in favor of Netty4 cookies. &lt;a href="https://github.com/twitter/finagle/commit/fccd92c6f9a1ebc4053f07f90047e4fcbab8414e"&gt;fccd92c6&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Removed the debug metrics &lt;code&gt;http/cookie/dropped_samesites&lt;/code&gt; and
&lt;code&gt;http/cookie/flagless_samesites&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/2de928ce4bb6973fe38160de3e174ecfc147f5b0"&gt;2de928ce&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Deprecations&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Multi-param legacy &lt;code&gt;tls&lt;/code&gt; methods have been deprecated in
&lt;code&gt;c.t.f.param.ServerTransportParams&lt;/code&gt; and &lt;code&gt;c.t.f.builder.ServerBuilder&lt;/code&gt;. Users should migrate
to using the &lt;code&gt;tls(SslServerConfiguration)&lt;/code&gt; method instead. &lt;a href="https://github.com/twitter/finagle/commit/fbfc6d1aac4bd242bd546a9bbfa87deb53bea280"&gt;fbfc6d1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;$client.withSession.maxIdleTime&lt;/code&gt; is now deprecated; use
&lt;code&gt;$client.withSessionPool.ttl&lt;/code&gt; instead to set the maximum allowed duration a connection may be
cached for.  &lt;a href="https://github.com/twitter/finagle/commit/0f060e3701f48e27f108a4911e156b8180f0c5aa"&gt;0f060e37&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-serversets: &lt;code&gt;c.t.f.zookeeper.ZkResolver&lt;/code&gt; has been deprecated in favor
of &lt;code&gt;c.t.f.serverset2.Zk2Resolver&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/9878a9ec32e9605caa58728e469d694c18fed1e7"&gt;9878a9ec&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Added&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka: Expose timeout duration in FinagleKafkaConsumerBuilder dest(). &lt;a href="https://github.com/twitter/finatra/commit/abd68ddfc6393e816c97079a28eb9ab10cb3a3d3"&gt;abd68ddf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Expose all existing RocksDb configurations. See
&lt;code&gt;c.t.f.k.config.FinatraRocksDBConfig&lt;/code&gt; for details on flag names,
descriptions and default values. &lt;a href="https://github.com/twitter/finatra/commit/1454867ca2b2b4e59fecdfcb8f97d57d8853ada4"&gt;1454867c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Added two RocksDB flags related to block cache tuning,
&lt;code&gt;cache_index_and_filter_blocks&lt;/code&gt; and &lt;code&gt;pin_l0_filter_and_index_blocks_in_cache&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/3b0931e399877ce51d8b1e861ee7fc4e537932d2"&gt;3b0931e3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka: Adding an implicit implementation of
&lt;code&gt;c.t.app.Flaggable[c.t.finatra.kafka.domain.SeekStrategy]&lt;/code&gt;
and &lt;code&gt;c.t.app.Flaggable[org.apache.kafka.clients.consumer.OffsetResetStrategy]&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/ef071e546966d21b70d085a654810b158ae49169"&gt;ef071e54&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http: Added support to serve &lt;code&gt;c.t.io.Reader&lt;/code&gt; as a streaming response in
&lt;code&gt;c.t.finatra.http.internal.marshalling.CallbackConverter&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/e5bda446476e98d7ccf6053a3d6cb4b404948cc1"&gt;e5bda446&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka: Expose endOffsets() in FinagleKafkaConsumer. &lt;a href="https://github.com/twitter/finatra/commit/bcbb57748bbfad717d3151353a8962a58b20b593"&gt;bcbb5774&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Adding missing ScalaDocs. Adding metric for elapsed state
restore time. RocksDB configuration now contains a flag for adjusting the number
of cache shard bits, &lt;code&gt;rocksdb.block.cache.shard.bits&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/afd9a17c9d7223065dfb37e7d6c006da21c1b2d4"&gt;afd9a17c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-jackson: Added @Pattern annotation to support finatra/jackson for regex pattern
validation on string values. &lt;a href="https://github.com/twitter/finatra/commit/862f0ab15660145fb8c3f432da544950a57747e9"&gt;862f0ab1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Refactor package names. All classes moved from
com.twitter.finatra.streams to com.twitter.finatra.kafkastreams. &lt;a href="https://github.com/twitter/finatra/commit/a2ad0ef3df8de67486a49ddcc3661fb030a3670c"&gt;a2ad0ef3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Delete deprecated and unused classes. &lt;a href="https://github.com/twitter/finatra/commit/ee948398653e7f387d29e815dec0d7b651bb9305"&gt;ee948398&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: &lt;code&gt;c.t.finatra.streams.transformer.domain.Time&lt;/code&gt; is now the canonical
representation of time for watermarks and timers. &lt;code&gt;RichLong&lt;/code&gt; implicit from
&lt;code&gt;com.twitter.finatra.streams.converters.time&lt;/code&gt; has been renamed to &lt;code&gt;RichFinatraKafkaStreamsLong&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/093b31b8739dc8e776c7d9d78b0059dd7e880ce1"&gt;093b31b8&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-jackson: Fix &lt;code&gt;CaseClassField&lt;/code&gt; annotation reflection for Scala 2.12. &lt;a href="https://github.com/twitter/finatra/commit/3747c1ab12abd53739e277834370f1e8c951b0ad"&gt;3747c1ab&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Combine FinatraTransformer with FinatraTransformerV2. &lt;a href="https://github.com/twitter/finatra/commit/cd455c43d2b25415248228862f8b96991a494a54"&gt;cd455c43&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: The return type of &lt;code&gt;ReqRepDarkTrafficFilterModule#newFilter&lt;/code&gt; has been changed from
&lt;code&gt;DarkTrafficFilter[MethodIface]&lt;/code&gt; to &lt;code&gt;Filter.TypeAgnostic&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/50184f1ba1876dc4465ec0df5d8847692e87a0e5"&gt;50184f1b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka: Add lookupBootstrapServers function that takes timeout as a parameter.
&lt;a href="https://github.com/twitter/finatra/commit/e3426fb98a320b2bf9bd48ef62843337e9a928e4"&gt;e3426fb9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: If a Controller is not configured with exactly one endpoint
per method, it will throw an AssertionError instead of logging an error message.
An attempt to use non-legacy functionality with a legacy Controller will throw
an AssertionError. &lt;a href="https://github.com/twitter/finatra/commit/d1d6d1e079faa05b3ac1a8a42b792f56cd12f777"&gt;d1d6d1e0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka: Add flags for controlling rocksdb internal LOG file growth.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rocksdb.log.info.level&lt;/code&gt; Allows the setting of rocks log levels
&lt;code&gt;DEBUG_LEVEL&lt;/code&gt;, &lt;code&gt;INFO_LEVEL&lt;/code&gt;, &lt;code&gt;WARN_LEVEL&lt;/code&gt;, &lt;code&gt;ERROR_LEVEL&lt;/code&gt;, &lt;code&gt;FATAL_LEVEL&lt;/code&gt;,
&lt;code&gt;HEADER_LEVEL&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rocksdb.log.max.file.size&lt;/code&gt; The maximal size of the info log file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rocksdb.log.keep.file.num&lt;/code&gt; Maximal info log files to be kept.
&lt;a href="https://github.com/twitter/finatra/commit/c03a497c0b96edae20671c4ab5ad754056a9d329"&gt;c03a497c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka: Add admin routes for properties and topology information&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/admin/kafka/streams/properties&lt;/code&gt; Dumps the
&lt;code&gt;KafkaStreamsTwitterServer#properties&lt;/code&gt; as plain text in the TwitterServer
admin page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/admin/kafka/streams/topology&lt;/code&gt; Dumps the
&lt;code&gt;KafkaStreamsTwitterServer#topology&lt;/code&gt; as plain text in the TwitterServer
admin page.
&lt;a href="https://github.com/twitter/finatra/commit/ecf2e54f685a3f017175fb1711d2666439c9bfed"&gt;ecf2e54f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-server: EmbeddedTwitterServer that fails to start will now continue to
throw the startup failure on calls to methods that require a successfully started server.
&lt;a href="https://github.com/twitter/finatra/commit/3ca4437cf9b2755692375de4e468d720a78836a4"&gt;3ca4437c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: &lt;code&gt;FinatraTopologyTester&lt;/code&gt; did not set
&lt;code&gt;TopologyTestDriver#initialWallClockTimeMs&lt;/code&gt; on initialization causing diverging wall clock time
when &lt;code&gt;TopologyTestDriver#advanceWallClockTime&lt;/code&gt; advanced time. The divergence was between
system time set by &lt;code&gt;org.joda.time.DateTimeUtils.setCurrentMillisFixed&lt;/code&gt; and internal mock timer
&lt;code&gt;TopologyTestDriver#mockWallClockTime&lt;/code&gt;. &lt;code&gt;FinatraTopologyTester.inMemoryStatsReceiver&lt;/code&gt; is reset on
&lt;code&gt;TopologyFeatureTest#beforeEach&lt;/code&gt; for all test that extend &lt;code&gt;TopologyFeatureTest&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/3b93a7d7d0316d49489cf7882d0a424278d66cd7"&gt;3b93a7d7&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Improve watermark assignment/propagation upon reading the first
message and when caching key value stores are used. &lt;a href="https://github.com/twitter/finatra/commit/9aa12b8db05360853443cb60d975423e8af8048b"&gt;9aa12b8d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-jackson: Support inherited annotations in case class deserialization. Case class
deserialization support does not properly find inherited Jackson annotations. This means
that code like this:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  trait MyTrait {
    @JsonProperty("differentName")
    def name: String
  }
  case class MyCaseClass(name: String) extends MyTrait
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;would not properly expect an incoming field with name &lt;code&gt;differentName&lt;/code&gt; to parse into the
  case class &lt;code&gt;name&lt;/code&gt; field. This commit provides support for capturing inherited annotations
  on case class fields. Annotations processed in order, thus if the same annotation appears
  in the class hierarchy multiple times, the value configured on the class will win otherwise
  will be in the order of trait linearization with the &amp;ldquo;last&amp;rdquo; declaration prevailing.
  &lt;a href="https://github.com/twitter/finatra/commit/6237ff86718e6e91fd0a5174fa17718fa740005f"&gt;6237ff86&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finatra: Remove extraneous dependency on old &lt;code&gt;javax.servlet&lt;/code&gt; ServletAPI dependency.
The fixes #478. &lt;a href="https://github.com/twitter/finatra/commit/851009524e0a9f9d40fbc1ef97a0d16ccd93dac5"&gt;85100952&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Closed&lt;/h4&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: updated &lt;code&gt;Reader#fromFuture&lt;/code&gt; to resolve its &lt;code&gt;onClose&lt;/code&gt; when reading of end-of-stream.
&lt;a href="https://github.com/twitter/util/commit/f2a05474ec41f34146d710bdc2a789efd6da9d21"&gt;f2a05474&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Added &lt;code&gt;Reader.flatten&lt;/code&gt; to flatten a &lt;code&gt;Reader[Reader[_]]&lt;/code&gt; to &lt;code&gt;Reader[_]&lt;/code&gt;,
and &lt;code&gt;Reader.fromSeq&lt;/code&gt; to create a new Reader from a Seq. &lt;a href="https://github.com/twitter/util/commit/a49bab4db50b09f2516805cb82a318d6b0557c8c"&gt;a49bab4d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Added &lt;code&gt;Duration.fromMinutes&lt;/code&gt; to return a &lt;code&gt;Duration&lt;/code&gt; from a given number of minutes.
&lt;a href="https://github.com/twitter/util/commit/eda0b390f3ac61fc3dd01df6255c18ef807f6920"&gt;eda0b390&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: If given a &lt;code&gt;Timer&lt;/code&gt; upon construction, &lt;code&gt;c.t.io.Pipe&lt;/code&gt; will respect the close
deadline and wait the given amount of time for any pending writes to be read. &lt;a href="https://github.com/twitter/util/commit/0a142872237b2709c1228bcedf9441cde2164af6"&gt;0a142872&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Optimized &lt;code&gt;ConstFuture.proxyTo&lt;/code&gt; which brings the performance of
&lt;code&gt;flatMap&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt; of a &lt;code&gt;ConstFuture&lt;/code&gt; in line with &lt;code&gt;map&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/de4cebda30c90f2461990e623e8a842f57249534"&gt;de4cebda&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Experimental toggle (com.twitter.util.BypassScheduler) for speeding up
&lt;code&gt;ConstFuture.map&lt;/code&gt; (&lt;code&gt;transformTry&lt;/code&gt;). The mechanism, when turned on, runs map operations
immediately (why not when we have a concrete value), instead of via the Scheduler, where it may
be queued and potentially reordered, e.g.:
&lt;code&gt;f.flatMap { _ =&amp;gt; println(1); g.map { _ =&amp;gt; println(2) }; println(3) }&lt;/code&gt; will print &lt;code&gt;1 2 3&lt;/code&gt;,
where it would have printed &lt;code&gt;1 3 2&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/aeafba1a4f547dc0e543a3bcea596ceb78ff4e63"&gt;aeafba1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-security: &lt;code&gt;Pkcs8KeyManagerFactory&lt;/code&gt; now supports a certificates file which contains multiple
certificates that are part of the same certificate chain. &lt;a href="https://github.com/twitter/util/commit/337e270f8fbdb5dd76ec01573e5262c0ab2054bd"&gt;337e270f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: Fixed the behavior in &lt;code&gt;c.t.io.Reader&lt;/code&gt; where &lt;code&gt;Reader#flatMap&lt;/code&gt; fails to propagate
parent reader&amp;rsquo;s &lt;code&gt;onClose&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/f2a05474ec41f34146d710bdc2a789efd6da9d21"&gt;f2a05474&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Closing a &lt;code&gt;c.t.io.Pipe&lt;/code&gt; will notify &lt;code&gt;onClose&lt;/code&gt; when the deadline has passed whereas
before the pipe would wait indefinitely for a read before transitioning to the Closed state.
&lt;a href="https://github.com/twitter/util/commit/0a142872237b2709c1228bcedf9441cde2164af6"&gt;0a142872&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Don&amp;rsquo;t allow &lt;code&gt;AsyncSemaphore&lt;/code&gt; &lt;code&gt;Permit&lt;/code&gt;s to be released multiple times. Before it was
possible to release a permit more than once and incorrectly remove waiters from the queue.
With this change, the &lt;code&gt;release&lt;/code&gt; permit operation is idempotent. &lt;a href="https://github.com/twitter/util/commit/ea24c9510623bdc4d0e35f21fa4ba2c7a66d4279"&gt;ea24c951&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Remove &lt;code&gt;c.t.u.CountDownLatch&lt;/code&gt; which is an extremely thin shim around
&lt;code&gt;j.u.c.CountDownLatch&lt;/code&gt; that provides pretty limited value.  To migrate to &lt;code&gt;j.u.c.CountDownLatch&lt;/code&gt;,
instead of &lt;code&gt;c.t.u.CountDownLatch#await(Duration)&lt;/code&gt;, please use
&lt;code&gt;j.u.c.CountDownLatch#await(int, TimeUnit)&lt;/code&gt;, and instead of
&lt;code&gt;c.t.u.CountDownLatch#within(Duration)&lt;/code&gt;, please throw an exception yourself after awaiting.
&lt;a href="https://github.com/twitter/util/commit/b9914f15b14e28cc6705cc6b5c876b22087f326b"&gt;b9914f15&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Deprecated conversions in &lt;code&gt;c.t.conversions&lt;/code&gt; have new implementations
that follow a naming scheme of &lt;code&gt;SomethingOps&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/df397f5338fb608d20e103307cb57985428fce47"&gt;df397f53&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;percent&lt;/code&gt; is now &lt;code&gt;PercentOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt; is now &lt;code&gt;StorageUnitOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt; is now &lt;code&gt;StringOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt; is now &lt;code&gt;ThreadOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; is now &lt;code&gt;DurationOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u64&lt;/code&gt; is now &lt;code&gt;U64Ops&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-collection: Delete util-collection.  We deleted &lt;code&gt;GenerationalQueue&lt;/code&gt;, &lt;code&gt;MapToSetAdapter&lt;/code&gt;, and
&lt;code&gt;ImmutableLRU&lt;/code&gt;, because we found that they were of little utility.  We deleted &lt;code&gt;LruMap&lt;/code&gt; because it
was a very thin shim around a &lt;code&gt;j.u.LinkedHashMap&lt;/code&gt;, where you override &lt;code&gt;removeEldestEntry&lt;/code&gt;.  If you
need &lt;code&gt;SynchronizedLruMap&lt;/code&gt;, you can wrap your &lt;code&gt;LinkedHashMap&lt;/code&gt; with
&lt;code&gt;j.u.Collection.synchronizedMap&lt;/code&gt;.  We moved &lt;code&gt;RecordSchema&lt;/code&gt; into finagle-base-http because it was
basically only used for HTTP messages, so its new package name is &lt;code&gt;c.t.f.http.collection&lt;/code&gt;.
&lt;a href="https://github.com/twitter/util/commit/60eff0a430fe16912accc5dec4b8c9f574ddc588"&gt;60eff0a4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Rename &lt;code&gt;BlacklistStatsReceiver&lt;/code&gt; to &lt;code&gt;DenylistStatsReceiver&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/ed3f7069ffd5640e53776b09bb490b09fd1b8b25"&gt;ed3f7069&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;Buf.Composite&lt;/code&gt; is now private. Program against more generic, &lt;code&gt;Buf&lt;/code&gt; interface instead.
&lt;a href="https://github.com/twitter/util/commit/41e24395a0d38c2c64c5451a358e7e130a93f6fe"&gt;41e24395&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Winter Update ❄️</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2019/01/18/fall-winter/"/>
    <id>https://finagle.github.io/blog/2019/01/18/fall-winter/</id>
    <published>2019-01-18T00:00:00Z</published>
    <updated>2019-04-19T09:54:14-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Winter is in full swing, a new year is upon us, and the &lt;a href="https://twitter.com/davidjrusek/status/1083452863739777024?s=20"&gt;coyotes&lt;/a&gt;
are still doing their thing, and so are all of us here at Twitter. As part of your
new year resolutions please make it a point to check out the
&lt;a href="https://github.com/twitter/finagle/releases/latest"&gt;latest&lt;/a&gt;
releases of our open source offerings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer experience&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reader, Writer and AsyncStream continue to make progress towards general use streaming use cases. Reader recently gained map and flatMap methods (&lt;a href="https://github.com/twitter/util/commit/ac15ad8bbd633aa5efd5e306d2dea2c40a50379e#diff-aee5b3c34d1f74bb32a0e4502ed6a988"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Finagle MySQL gained the ability to pin successive operations to a single session, enabling use cases where connection state is important for correctness.(&lt;a href="https://github.com/twitter/finagle/commit/87b3b781d0ba601d1fd91293741fc264264671f8#diff-d6f8b1cdbafc82ccae487a9b1f76478a"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved Java Compatibility (
&lt;a href="https://github.com/twitter/finatra/commit/ba224757fba609bbf786ab42d9f3cb8eb81f80e9"&gt;1&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finatra/commit/f6c44cab87d1f9023e6028b76c61ce1920710a7b"&gt;2&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finagle/commit/e57d2a9156d72ada8a81a590714ece676e423ce6"&gt;3&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finagle/commit/30a8000c4a910134219fc1317cead9735ca97cbb"&gt;4&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finagle/commit/cff9aeddc0ae6ceb4c50cb8d67b3418a133d30f9"&gt;5&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Netty&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the works for a while, we all but removed the last vestiges of Netty 3 with the use of Netty 4 cookies.&lt;/li&gt;
&lt;li&gt;Upgraded to 4.1.31.Final (&lt;a href="https://github.com/twitter/finagle/commit/8e0f4b868c34259350fb0def2e7fee5d3d77fece"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Finatra&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Per-method filtering and access to ThriftMux headers are now available in Finatra by switching to a new way of constructing Controllers. Also, Finatra Thrift services now use TypeAgnostic filters instead of the custom ThriftFilters (&lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for following along. If you&amp;rsquo;d like to know more about any one of these
updates, or if you have a question about them, join us on the
&lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;Finagle&lt;/a&gt; or
&lt;a href="https://groups.google.com/forum/#!forum/finatra-users"&gt;Finatra&lt;/a&gt; mailing lists
or hop on &lt;a href="https://gitter.im/twitter/finagle"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Catch you on the next release,&lt;/p&gt;

&lt;p&gt;Dave and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>January 2019 Release Notes - Version 19.1.0 🎉</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2019/01/14/release-notes/"/>
    <id>https://finagle.github.io/blog/2019/01/14/release-notes/</id>
    <published>2019-01-14T00:00:00Z</published>
    <updated>2019-04-19T09:54:14-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Happy New Year folks! Hopefully new years resolutions are still on pace. In
the meantime, let&amp;rsquo;s kick off 2019 with a fresh new release of libraries.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;c.t.f.s.StackBasedServer&lt;/code&gt; has been changed to extend the
&lt;code&gt;c.t.f.Stack.Transformable&lt;/code&gt; trait. This brings &lt;code&gt;StackBasedServer&lt;/code&gt; into parity
with &lt;code&gt;c.t.f.c.StackBasedClient&lt;/code&gt;, which already extends the
&lt;code&gt;Stack.Transformable&lt;/code&gt; trait. &lt;a href="https://github.com/twitter/finagle/commit/9f637b5e41b9ea77129c4a48f4327e3b51787526"&gt;9f637b5e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: HttpMuxer propagates the close signal to the underlying handlers.
&lt;a href="https://github.com/twitter/finagle/commit/6475680d241f3e9b026b3c3aa6eb94da8c1c37d4"&gt;6475680d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-stats-core: introduce flag to allow logging metrics on service shutdown.
&lt;a href="https://github.com/twitter/finagle/commit/4588bc1f0a64f3ff6ab1e241bb0726a79f72ca14"&gt;4588bc1f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.b.ServerBuilder.stack&lt;/code&gt; method which takes a function
has been removed. Uses of this method should be changed to use the c.t.f.b.ServerBuilder.stack
method which takes a &lt;code&gt;c.t.f.s.StackBasedServer&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/a05e5e7b69d1b8237d8a6360d00c031172a2db0f"&gt;a05e5e7b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The type of &lt;code&gt;c.t.f.b.ServerConfig.nilServer&lt;/code&gt; has been changed from
&lt;code&gt;Server\[Req, Rep\]&lt;/code&gt; to &lt;code&gt;StackBasedServer\[Req, Rep\]&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/4be953d433899b0dc4d4a6155283699c8cd8c06d"&gt;4be953d4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The access level of the &lt;code&gt;c.t.f.b.ServerBuilder.copy&lt;/code&gt; method has changed
from protected to private. &lt;a href="https://github.com/twitter/finagle/commit/4be953d433899b0dc4d4a6155283699c8cd8c06d"&gt;4be953d4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The bridge type &lt;code&gt;c.t.f.b.Server&lt;/code&gt; has been removed. Users should
change to use &lt;code&gt;c.t.f.ListeningServer&lt;/code&gt; instead. Uses of the previously
deprecated &lt;code&gt;Server.localAddress&lt;/code&gt; should use &lt;code&gt;ListeningServer.boundAddress&lt;/code&gt;
instead. &lt;a href="https://github.com/twitter/finagle/commit/eb66ee71b7054112ab6f4618e3e985d56aaa1f44"&gt;eb66ee71&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.t.Transport.localAddress&lt;/code&gt; and
&lt;code&gt;c.t.f.t.Transport.remoteAddress&lt;/code&gt; methods are now final and can no longer
be extended. Users should migrate to the respective &lt;code&gt;c.t.f.t.TransportContext&lt;/code&gt;
methods. &lt;a href="https://github.com/twitter/finagle/commit/b85f43a0a80d53766eef22c16c5f7c3497b34e87"&gt;b85f43a0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: The &lt;code&gt;c.t.f.t.ThriftRichClient.protocolFactory&lt;/code&gt; and
&lt;code&gt;c.t.f.t.ThriftRichServer.protocolFactory&lt;/code&gt; methods have been removed. Users should
switch to using &lt;code&gt;ThriftRichClient.clientParam.protocolFactory&lt;/code&gt; and
&lt;code&gt;ThriftRichServer.serverParam.protocolFactory&lt;/code&gt; instead. In addition, implementations
of the &lt;code&gt;protocolFactory&lt;/code&gt; method have been removed from the concrete &lt;code&gt;c.t.f.Thrift&lt;/code&gt;
and &lt;code&gt;c.t.f.ThriftMux&lt;/code&gt; client and server. &lt;a href="https://github.com/twitter/finagle/commit/e33baf8210d0acd4f2fab9877acd1ceea287ab40"&gt;e33baf82&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Failed writes on Linux due to a remote peer disconnecting should now
be properly seen as a &lt;code&gt;c.t.f.ChannelClosedException&lt;/code&gt; instead of a
&lt;code&gt;c.t.f.UnknownChannelException&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/8f5774cbb8d8342ae5785f1bbeb66f5a07420810"&gt;8f5774cb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Compression level of 0 was failing on the server-side when speaking h2c.
Updated so that it can handle a request properly. &lt;a href="https://github.com/twitter/finagle/commit/5f96fcb2b042f641de7db10428981b8bcb2a4e0a"&gt;5f96fcb2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thriftmux: A Java compatibility issue for users trying to call &lt;code&gt;withOpportunisticTls&lt;/code&gt;
on &lt;code&gt;ThriftMux&lt;/code&gt; clients and servers has been fixed. &lt;a href="https://github.com/twitter/finagle/commit/e57d2a9156d72ada8a81a590714ece676e423ce6"&gt;e57d2a91&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-core: &lt;code&gt;ServiceFactory.const&lt;/code&gt; propagates the close from the &lt;code&gt;ServiceFactory&lt;/code&gt;
to the underlying service, instead of ignoring it. &lt;a href="https://github.com/twitter/finagle/commit/6475680d241f3e9b026b3c3aa6eb94da8c1c37d4"&gt;6475680d&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Added&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: SumAggregator and CompositeSumAggregator only support enhanced window
aggregations for the sum operation. Deprecate SumAggregator and CompositeSumAggregator and create
an AggregatorTransformer class that can perform arbitrary aggregations. &lt;a href="https://github.com/twitter/finatra/commit/f588970e04c976b549d1b95dfce8326139d4353e"&gt;f588970e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-streams: Open-source Finatra Streams. Finatra Streams is an integration
between Kafka Streams and Finatra which we&amp;rsquo;ve been using internally at Twitter
for the last year. The library is not currently open-source.
&lt;a href="https://github.com/twitter/finatra/commit/47cce5462c5831a4bd1952f3c80b72987fda5552"&gt;47cce546&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-server: Add lint rule to alert when deprecated &lt;code&gt;util-logging&lt;/code&gt; JUL flags from the
&lt;code&gt;c.t.inject.server.DeprecatedLogging&lt;/code&gt; trait are user defined. This trait was mixed-in
only for backwards compatibility when TwitterServer was moved to the slf4j-api and the flags are
not expected to be configured. By default, &lt;code&gt;util-app&lt;/code&gt; based applications will fail to start if
they are passed a flag value at startup which they do not define. Users should instead configure
their chosen slf4j-api logging implementation directly. &lt;a href="https://github.com/twitter/finatra/commit/388bf8f9564dd67681640aeefed1e75d6b63b5b9"&gt;388bf8f9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.Controllers&lt;/code&gt; now support per-method filtering and
access to headers via &lt;code&gt;c.t.scrooge.{Request, Response}&lt;/code&gt; wrappers. To use this new
functionality, create a &lt;code&gt;Controller&lt;/code&gt; which extends the
&lt;code&gt;c.t.finatra.thrift.Controller(SomeThriftService)&lt;/code&gt; abstract class instead of constructing a
&lt;code&gt;Controller&lt;/code&gt; that mixes in the &lt;code&gt;SomeThriftService.BaseServiceIface&lt;/code&gt; trait. With this, you can now
provide implementations in form of &lt;code&gt;c.t.scrooge.Request&lt;/code&gt;/&lt;code&gt;c.t.scrooge.Response&lt;/code&gt; wrappers by calling
the &lt;code&gt;handle(ThriftMethod)&lt;/code&gt; method. Note that a &lt;code&gt;Controller&lt;/code&gt; constructed this way cannot also
extend a &lt;code&gt;BaseServiceIface&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;handle(SomeMethod).filtered(someFilter).withFn { req: Request[SomeMethod.Args] =&amp;gt;
  val requestHeaders = req.headers
  // .. implementation here

  // response: Future[Response[SomeMethod.SuccessType]]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that if &lt;code&gt;Request&lt;/code&gt;/&lt;code&gt;Response&lt;/code&gt; based implementations are used the types on any
existing &lt;code&gt;ExceptionMappers&lt;/code&gt; should be adjusted accordingly. Also, if a &lt;code&gt;DarkTrafficFilterModule&lt;/code&gt;
was previously used, it must be swapped out for a &lt;code&gt;ReqRepDarkTrafficFilterModule&lt;/code&gt;
&lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;9d891cd1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;inject-core, inject-server: Remove deprecated &lt;code&gt;@Bind&lt;/code&gt; support from test mixins. Users should
instead prefer using the &lt;a href="https://twitter.github.io/finatra/user-guide/testing/bind_dsl.html"&gt;bind[T]&lt;/a&gt;
DSL in tests. &lt;a href="https://github.com/twitter/finatra/commit/841f6974864f84f4940f68a4b4145259b5c81933"&gt;841f6974&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-app: Remove deprecated &lt;code&gt;bind\[T\]&lt;/code&gt; DSL methods from c.t.inject.app.BindDSL.&lt;/p&gt;

&lt;p&gt;Instead of:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;injector.bind[T](instance)
injector.bind[T, Ann](instance)
injector.bind[T](ann, instance)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Users should instead use the more expressive forms of these methods, e.g.,:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;injector.bind[T].toInstance(instance)
injector.bind[T].annotatedWith[Ann].toInstance(instance)
injector.bind[T].annotatedWith(ann).toInstance(instance)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which more closely mirrors the scala-guice binding DSL. &lt;a href="https://github.com/twitter/finatra/commit/2690003d8a79a520f46972ab05945c9381de0e7a"&gt;2690003d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: For services that wish to support dark traffic over
&lt;code&gt;c.t.scrooge.Request&lt;/code&gt;/&lt;code&gt;c.t.scrooge.Response&lt;/code&gt;-based services, a new dark traffic module is
available: &lt;code&gt;c.t.finatra.thrift.modules.ReqRepDarkTrafficFilterModule&lt;/code&gt; &lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;9d891cd1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Creating a &lt;code&gt;c.t.finatra.thrift.Controller&lt;/code&gt; that extends a
&lt;code&gt;ThriftService.BaseServiceIface&lt;/code&gt; has been deprecated. See the related bullet point in &amp;ldquo;Added&amp;rdquo; with
the corresponding PHAB_ID to this one for how to migrate. &lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;9d891cd1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-core, inject-server: Remove deprecated &lt;code&gt;WordSpec&lt;/code&gt; testing utilities. The framework
default ScalaTest testing style is &lt;code&gt;FunSuite&lt;/code&gt; though users are free to mix their testing
style of choice with the framework provided test mixins as per the
&lt;a href="https://twitter.github.io/finatra/user-guide/testing/mixins.html"&gt;documentation&lt;/a&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/41767c6ebd19488bf8140bda987ba19055313d31"&gt;41767c6e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Instead of failing (potentially silently)
&lt;code&gt;c.t.finatra.thrift.routing.ThriftWarmup&lt;/code&gt; now explicitly checks that it is
using a properly configured &lt;code&gt;c.t.finatra.thrift.routing.Router&lt;/code&gt; &lt;a href="https://github.com/twitter/finatra/commit/e2dc8b300f6dcd4e861b0e4320f1d5cb5316e19a"&gt;e2dc8b30&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-inject: &lt;code&gt;c.t.finatra.inject.server.PortUtils&lt;/code&gt; has been modified to
work with &lt;code&gt;c.t.f.ListeningServer&lt;/code&gt; only. Methods which worked with the
now-removed &lt;code&gt;c.t.f.b.Server&lt;/code&gt; have been modified or removed.
&lt;a href="https://github.com/twitter/finatra/commit/642d7260b5282e3be2fb76ab8182b6504bb1c20d"&gt;642d7260&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Finatra Queryable State methods currently require the window size
to be passed into query methods for windowed key value stores. This is unnecessary, as
the queryable state class can be passed the window size at construction time. We also now
save off all FinatraKeyValueStores in a global manager class to allow query services
(e.g. thrift) to access the same KeyValueStore implementation that the FinatraTransformer
is using. &lt;a href="https://github.com/twitter/finatra/commit/c51e174b1869c6abd7dfbd9a5965b2f27a4e5cf9"&gt;c51e174b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finatra-kafka-streams: Fix bug where KeyValueStore#isOpen was throwing an
exception when called on an uninitialized key value store
&lt;a href="https://github.com/twitter/finatra/commit/d3f833a14ef6efdd521fcd7425fcac210757d620"&gt;d3f833a1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Update asm, cglib, jmock dependencies &lt;a href="https://github.com/twitter/scrooge/commit/688cd29e0a6421dca5e43a081bf5f9d9b8c02039"&gt;688cd29e&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Propagate the admin server&amp;rsquo;s shutdown to the handlers that are registered with the admin server.
&lt;a href="https://github.com/twitter/twitter-server/commit/8a164d46d68749310f68b207d8decd7d10986afa"&gt;8a164d46&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  util-core: Added Reader.map/flatMap to transform Reader[A] to Reader[B]. Added &lt;code&gt;fromFuture()&lt;/code&gt;
and &lt;code&gt;value()&lt;/code&gt; in the Reader object to construct a new Reader. &lt;a href="https://github.com/twitter/util/commit/ac15ad8bbd633aa5efd5e306d2dea2c40a50379e"&gt;ac15ad8b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: The implicit conversions classes in &lt;code&gt;c.t.conversions.SomethingOps&lt;/code&gt; have been
renamed to have unique names. This allows them to be used together with wildcard imports.
See Github issue (&lt;a href="https://github.com/twitter/util/issues/239"&gt;https://github.com/twitter/util/issues/239&lt;/a&gt;). &lt;a href="https://github.com/twitter/util/commit/2d5d6da989ab83e8701b9f57ae0708a5851beb07"&gt;2d5d6da9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Both &lt;code&gt;c.t.io.Writer.FailingWriter&lt;/code&gt; and &lt;code&gt;c.t.io.Writer.fail&lt;/code&gt; were removed. Build your
own instance should you need to. &lt;a href="https://github.com/twitter/util/commit/63815225ef894029bf107c1c2b4e17182e515994"&gt;63815225&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>December 2018 Release Notes - Version 18.12.0 🧤</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/12/18/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/12/18/release-notes/</id>
    <published>2018-12-18T00:00:00Z</published>
    <updated>2019-04-19T09:54:14-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It&amp;rsquo;s hot chocolate season in the big apple.  That means mittens, ice-skating,
and curling up by the radiator.  Grab your puffer, it&amp;rsquo;s the most beautiful time
of the year.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-redis: Add support for the new stream API released in Redis 5.0. &lt;a href="https://github.com/twitter/finagle/commit/ba578c1445b2e241687ad3c89eec4f3d93431a76"&gt;ba578c14&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Add Java compatibility for &lt;code&gt;c.t.f.Filter.TypeAgnostic.Identity&lt;/code&gt;
via &lt;code&gt;c.t.f.Filter.typeAgnosticIdentity()&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/cff9aeddc0ae6ceb4c50cb8d67b3418a133d30f9"&gt;cff9aedd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Add Java compatibility for &lt;code&gt;c.t.f.Name&lt;/code&gt; through &lt;code&gt;Names&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/30a8000c4a910134219fc1317cead9735ca97cbb"&gt;30a8000c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Introduce a &lt;code&gt;StackServer.withStack&lt;/code&gt; overload that
makes modifying the existing &lt;code&gt;Stack&lt;/code&gt; easier when using method chaining.
&lt;a href="https://github.com/twitter/finagle/commit/f1a980cfdb780963d1e4e146d9031a93b43b107d"&gt;f1a980cf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-stats: Split the implementation and &lt;code&gt;ServiceLoading&lt;/code&gt; into separate modules.
The implementation is in &lt;code&gt;finagle-stats-core&lt;/code&gt;. This is backwards compatible
for existing users of &lt;code&gt;finagle-stats&lt;/code&gt; while allowing new usages built on top.
&lt;a href="https://github.com/twitter/finagle/commit/b9fe5c8d41e7246e0dda31e9c178ae0d7d09c571"&gt;b9fe5c8d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Add &lt;code&gt;c.t.finagle.thrift.MethodMetadata&lt;/code&gt; which provides a &lt;code&gt;LocalContext&lt;/code&gt; Key
for setting information about the current Thrift method and an accessor for retrieving
the currently set value. &lt;a href="https://github.com/twitter/finagle/commit/7b22e4efb5efd14296f2a080b1eb2ccab38db804"&gt;7b22e4ef&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Update &lt;code&gt;c.t.finagle.thrift.MethodMetadata&lt;/code&gt; to provide an
&lt;code&gt;asCurrent&lt;/code&gt; method to set the current &lt;code&gt;c.t.finagle.thrift.MethodMetadata&lt;/code&gt; in the
&lt;code&gt;LocalContext&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/f46e1f771477102c93f4f82a54d0d1292a4dffba"&gt;f46e1f77&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The &lt;code&gt;c.t.u.Closable&lt;/code&gt; trait has been removed from
&lt;code&gt;c.t.f.t.TransportContext&lt;/code&gt;, as well as the &lt;code&gt;close&lt;/code&gt; and &lt;code&gt;onclose&lt;/code&gt; methods. Uses of
these methods within &lt;code&gt;TransportContext&lt;/code&gt; should be changed to use the corresponding
methods on &lt;code&gt;c.t.f.t.Transport&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/b8b850bb9e37449854f4c983bbc8f821987cdb59"&gt;b8b850bb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.t.Transport.peerCertificate&lt;/code&gt; method on the &lt;code&gt;Transport&lt;/code&gt; class
(not the &lt;code&gt;Transport.peerCertificate&lt;/code&gt; Finagle context) has been removed. Uses of this
method should be changed to use &lt;code&gt;c.t.f.t.TransportContext.peerCertificate&lt;/code&gt; instead.
&lt;a href="https://github.com/twitter/finagle/commit/ab0432b4a56f993802c68af9b3633f0b461ec97a"&gt;ab0432b4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.t.TransportContext.status&lt;/code&gt; method has been removed
from &lt;code&gt;TransportContext&lt;/code&gt;. Uses of this method should be changed to use
&lt;code&gt;c.t.f.t.Transport.status&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/fd97536f63a3f72c868fa4ae5e17772b21ccfc14"&gt;fd97536f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: &lt;code&gt;c.t.f.m.Charset&lt;/code&gt; has been renamed to &lt;code&gt;c.t.f.m.MysqlCharset&lt;/code&gt; to resolve
any ambiguity between it and the &lt;code&gt;Charset&lt;/code&gt; &lt;code&gt;Stack&lt;/code&gt; parameter. &lt;a href="https://github.com/twitter/finagle/commit/05354cd55a2307d51b9cec24bd747786cd6db068"&gt;05354cd5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: All &lt;code&gt;Stack&lt;/code&gt; params (&lt;code&gt;Charset&lt;/code&gt;, &lt;code&gt;Credentials&lt;/code&gt;, &lt;code&gt;Database&lt;/code&gt;, &lt;code&gt;FoundRows&lt;/code&gt;,
&lt;code&gt;MaxConcurrentPrepareStatements&lt;/code&gt;, &lt;code&gt;UnsignedColumns&lt;/code&gt;) have been moved to the
&lt;code&gt;com.twitter.finagle.mysql.param&lt;/code&gt; namespace. &lt;a href="https://github.com/twitter/finagle/commit/d30c5549500e9e6876647a9365823ceae1cddd0b"&gt;d30c5549&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: The deprecated &lt;code&gt;c.t.f.m.Client.apply(factory, statsReceiver)&lt;/code&gt; method
has been removed. &lt;a href="https://github.com/twitter/finagle/commit/17747e1a969ee5a39c45852ca3d5486cb9600c10"&gt;17747e1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: The &lt;code&gt;c.t.f.m.Handshake&lt;/code&gt; class and companion object have been made
private. &lt;a href="https://github.com/twitter/finagle/commit/20c8d50f248d8ef3f32c5dc3140f37c69ec726dc"&gt;20c8d50f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Rename the toggle &amp;lsquo;c.t.f.h.UseH2CClients&amp;rsquo; to &amp;lsquo;c.t.f.h.UseH2CClients2&amp;rsquo;.
&lt;a href="https://github.com/twitter/finagle/commit/43c0b69c04be6ea31e5eaf6feb0fd9bbd1856f77"&gt;43c0b69c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle: Upgrade to Netty 4.1.31.Final and netty-tcnative 2.0.19.Final. &lt;a href="https://github.com/twitter/finagle/commit/8e0f4b868c34259350fb0def2e7fee5d3d77fece"&gt;8e0f4b86&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: The &lt;code&gt;DefaultHeaderMap&lt;/code&gt; will replace &lt;code&gt;obs-fold&lt;/code&gt; ( CRLF 1*(SP/HTAB) ) in
inserted header values. &lt;a href="https://github.com/twitter/finagle/commit/51c4f789f106a8ca433956b72a6d478c2189f5f0"&gt;51c4f789&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Added&lt;/h4&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Instead of failing (potentially silently)
&lt;code&gt;c.t.finatra.thrift.routing.ThriftWarmup&lt;/code&gt; now explicitly checks that it is
using a properly configured &lt;code&gt;c.t.finatra.thrift.routing.Router&lt;/code&gt; &lt;a href="https://github.com/twitter/finatra/commit/e2dc8b300f6dcd4e861b0e4320f1d5cb5316e19a"&gt;e2dc8b30&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.Controller&lt;/code&gt; is now an abstract class
rather than a trait. &lt;a href="https://github.com/twitter/finatra/commit/09c9bbb13d19a25478c34b7e0a02883ebe26be0a"&gt;09c9bbb1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.internal.ThriftMethodService&lt;/code&gt; is now
private. &lt;a href="https://github.com/twitter/finatra/commit/53dc05016196743cffcc7235b1625378468ee584"&gt;53dc0501&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.exceptions.FinatraThriftExceptionMapper&lt;/code&gt; and
&lt;code&gt;c.t.finatra.thrift.exceptions.FinatraJavaThriftExceptionMapper&lt;/code&gt; now extend
&lt;code&gt;ExceptionManager[Throwable, Nothing]&lt;/code&gt; since the return type was never used. They are
now also final. &lt;a href="https://github.com/twitter/finatra/commit/dc894547390a1130414a15594f55b3828a05ffed"&gt;dc894547&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Remove &lt;code&gt;c.t.finatra.thrift.routing.JavaThriftRouter#beforeFilter&lt;/code&gt;. This method
adds too much confusion to the Router API and users are encouraged to instead apply their
TypeAgnostic Filters directly to the resultant &lt;code&gt;Service[-R, +R]&lt;/code&gt;  by overriding the
&lt;code&gt;c.t.finatra.thrift.AbstractThriftServer#configureService&lt;/code&gt; method instead. &lt;a href="https://github.com/twitter/finatra/commit/b0cb8eaf7107c72ccb221aea588f06af20ed40d9"&gt;b0cb8eaf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finagle.Filter.TypeAgnostic&lt;/code&gt; filters are now the standard type of filter
that can be added by configuring a &lt;code&gt;ThriftRouter&lt;/code&gt;. &lt;code&gt;c.t.finatra.thrift.ThriftFilter&lt;/code&gt; has been
deprecated. &lt;a href="https://github.com/twitter/finatra/commit/6e93b9cc415ed25e374a4207a84328a59036bcd9"&gt;6e93b9cc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.ThriftRequest&lt;/code&gt; has been deprecated. All of the information
contained in a ThriftRequest can be found in other ways:
&lt;code&gt;methodName&lt;/code&gt; -&amp;gt; &lt;code&gt;Method.current.get.name&lt;/code&gt;
&lt;code&gt;traceId&lt;/code&gt;    -&amp;gt; &lt;code&gt;Trace.id&lt;/code&gt;
&lt;code&gt;clientId&lt;/code&gt;   -&amp;gt; &lt;code&gt;ClientId.current&lt;/code&gt;
&lt;a href="https://github.com/twitter/finatra/commit/6e93b9cc415ed25e374a4207a84328a59036bcd9"&gt;6e93b9cc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finatra-http: Validate headers to prevent header injection vulnerability. &lt;a href="https://github.com/twitter/finatra/commit/8a9250002d2d0676b3ff82ceaa9c5260772d7c0c"&gt;8a925000&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Closed&lt;/h4&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge-generator: Set a &lt;code&gt;LocalContext&lt;/code&gt; value with the current Thrift method in the
generated Java and Scala code such that the application &lt;code&gt;Service[-R, +R]&lt;/code&gt; being executed has
access to information about the current Thrift method being invoked. &lt;a href="https://github.com/twitter/scrooge/commit/09da33978159fc4f0ac95848adee3b09ae64326b"&gt;09da3397&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Provide a way to listen for stream termination to &lt;code&gt;c.t.util.Reader&lt;/code&gt;, &lt;code&gt;Reader#onClose&lt;/code&gt;
which is satisfied when the stream is discarded or read until the end. &lt;a href="https://github.com/twitter/util/commit/3b1434e2b59a4f8df89c408ed442abb738e3a6a6"&gt;3b1434e2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Conversions in &lt;code&gt;c.t.conversions&lt;/code&gt; have new implementations
that follow a naming scheme of &lt;code&gt;SomethingOps&lt;/code&gt;. Where possible the implementations
are &lt;code&gt;AnyVal&lt;/code&gt; based avoiding allocations for the common usage pattern.
&lt;a href="https://github.com/twitter/util/commit/ee56e5f2418d5d6540d37268436ff6f47520edaf"&gt;ee56e5f2&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;percent&lt;/code&gt; is now &lt;code&gt;PercentOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt; is now &lt;code&gt;StorageUnitOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt; is now &lt;code&gt;StringOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt; is now &lt;code&gt;ThreadOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; is now &lt;code&gt;DurationOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u64&lt;/code&gt; is now &lt;code&gt;U64Ops&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: Fixed a bug where tail would sometimes return Some empty AsyncStream instead of None.
&lt;a href="https://github.com/twitter/util/commit/1dc614bc7adf236ffe1e92b45fac35ea3241f6b0"&gt;1dc614bc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Deprecations&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Conversions in &lt;code&gt;c.t.conversions&lt;/code&gt; have been deprecated in favor of &lt;code&gt;SomethingOps&lt;/code&gt;
versions. Where possible the implementations are &lt;code&gt;AnyVal&lt;/code&gt; based and use implicit classes
instead of implicit conversions. &lt;a href="https://github.com/twitter/util/commit/ee56e5f2418d5d6540d37268436ff6f47520edaf"&gt;ee56e5f2&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;percent&lt;/code&gt; is now &lt;code&gt;PercentOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt; is now &lt;code&gt;StorageUnitOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt; is now &lt;code&gt;StringOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt; is now &lt;code&gt;ThreadOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; is now &lt;code&gt;DurationOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u64&lt;/code&gt; is now &lt;code&gt;U64Ops&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Experimental &lt;code&gt;c.t.io.exp.MinThroughput&lt;/code&gt; utilities were removed.  &lt;a href="https://github.com/twitter/util/commit/d9c5e4a3fbb383114bc5aad73754ed9fef6f4dd2"&gt;d9c5e4a3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Deleted &lt;code&gt;c.t.io.Reader.Null&lt;/code&gt;, which was incompatible with &lt;code&gt;Reader#onClose&lt;/code&gt; semantics.
&lt;code&gt;c.t.io.Reader#empty[Nothing]&lt;/code&gt; is a drop-in replacement. &lt;a href="https://github.com/twitter/util/commit/3b1434e2b59a4f8df89c408ed442abb738e3a6a6"&gt;3b1434e2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Removed &lt;code&gt;c.t.util.U64&lt;/code&gt; bits. Use &lt;code&gt;c.t.converters.u64._&lt;/code&gt; instead.  &lt;a href="https://github.com/twitter/util/commit/8034e5577c953c2b99836865cd9cf6da652aea71"&gt;8034e557&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
